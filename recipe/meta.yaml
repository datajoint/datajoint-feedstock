{% set python_version = ">=3.9,<4.0" %}
{% set python_version = ">=3.9,<4.0" %}
{% set python_version = ">=3.9,<4.0" %}
{% set name = "datajoint" %}
{% set version = "0.14.5" %}
{% set python_version = ">=3.9,<4.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 78d80a51da0881edfa045910e507955c30bc5e714b105999bfa78f7fb2ad98c5

# build should be tested locally before PR, please save some resources for the community
# conda install -n base conda-build boa conda-smithy
# conda build . or conda mambabuild .
build:
  noarch: python
  number: 0
  script: {{ PYTHON }} -m pip install . --no-deps -vv

requirements:
  host:
    - python {{ python_version }}
    - pip
    # for build, conda-forge python 3.13 removed setuptools as default dependency
    - setuptools
  run:
    - python {{ python_version }}
    # for datajoint plugin dependencies
    - setuptools
    - minio >=7.0.0
    - pyparsing
    - networkx
    - pymysql >=0.7.2
    - ipython
    - numpy
    - deepdiff
    - tqdm
    - pandas
    - pydot
    # no pyqt included: https://conda-forge.org/docs/maintainer/knowledge_base/#matplotlib
    - matplotlib-base
    - cryptography
    - otumat
    - urllib3
    ## System Dependencies
    # for dj.ERD
    - graphviz
    # for matplotlib with Microsoft TrueType
    - mscorefonts

test:
  requires:
    - python {{ python_version }}
  imports:
    - datajoint
  commands:
    # check that erd drawing is supported
    - python -c 'import datajoint as dj; assert dj.diagram.diagram_active'
    # check graphviz is installed
    - dot -V
    # TODO - add unit test after https://github.com/datajoint/datajoint-python/issues/1211

about:
  home: https://datajoint.com
  license: LGPL-2.1-only
  license_family: LGPL
  license_file: LICENSE.txt
  summary: A relational data framework for scientific data pipelines.

  description: |
    DataJoint for Python is a framework for scientific workflow management based on relational principles.
    DataJoint is built on the foundation of the relational data model and prescribes a consistent method for
    organizing, populating, computing, and querying data.
  doc_url: https://datajoint.com/docs/core/datajoint-python/latest/
  dev_url: https://github.com/datajoint/datajoint-python

extra:
  # TL;DR;
  # A maintainer can be added by:
  # - maintainer contributed PR been merged, and this list get updated
  # - open an issue with '@conda-forge-admin, please add user @username' as title
  # Also a new maintainer needs to accept conda-forge Github org invite email
  recipe-maintainers:
    - guzman-raphael
    - dimitri-yatsenko
    - datajointbot
    - drewyangdev
    - ttngu207
